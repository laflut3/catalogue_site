/** exemple fonction getAll */
useEffect(() => {
    const fetchTestimonials = async () => {
        try {
            const response = await axios.get('/api/comment');
            setTestimonials(response.data);
        } catch (error) {
            console.error('Error loading testimonials:', error);
            setError('Failed to load testimonials.');
        } finally {
            setLoading(false);
        }
    };

    fetchTestimonials();
}, []);

/** exemple fonction delete */
const handleDelete = async (id: string) => {
    try {
        const userId = session?.user?.id;
        const isAdmin = session?.user?.isAdmin;
        console.log('Deleting testimonial with id:', id, 'userId:', userId, 'isAdmin:', isAdmin);

        const response = await axios.delete('/api/comment', {
            data: { commentaireId: id, userId: userId, isAdmin: isAdmin }
        });

        if (response.status === 200) {
            setTestimonials(testimonials.filter(testimonial => testimonial._id !== id));
        } else {
            throw new Error(response.data.message || 'Failed to delete testimonial.');
        }
    } catch (error) {
        console.error('Error deleting testimonial:', error);
        setError('Failed to delete testimonial.');
    }
};


/** exemple fonction modif **/
const handleSave = async (updatedTestimonial: Testimonial) => {
    try {
        console.log('Saving updated testimonial:', updatedTestimonial);
        await axios.patch('/api/comment', {
            commentaireId: updatedTestimonial._id,
            userId: session?.user?.id,
            newMessage: updatedTestimonial.message,
            newObjet: updatedTestimonial.objet,
            newNote: updatedTestimonial.note
        });
        setTestimonials(testimonials.map(testimonial =>
            testimonial._id === updatedTestimonial._id ? updatedTestimonial : testimonial
        ));
        setEditingTestimonial(null);
    } catch (error) {
        console.error('Error editing testimonial:', error);
        setError('Failed to edit testimonial.');
    }
};

/** exemple fonction ajout **/
const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        setMessage('');
        setError('');

        if (!commentaire || !sujet || !note) {
            setError('Commentaire, sujet, et note sont requis');
            return;
        }

        if (!session) {
            router.push('/Sign'); // Utilisez router ici après avoir vérifié session
            return;
        }

        try {
            const response = await axios.post('/api/comment', {
                User: {_id: session.user.id, username, image},
                objet: sujet,
                message: commentaire,
                note
            });
            if (response.status === 201) {
                setMessage('Témoignage inséré avec succès');
                setCommentaire('');
                setSujet('');
                setNote('');
            }
        } catch (error) {
            setError('Échec de l\'insertion du témoignage');
        }
    };